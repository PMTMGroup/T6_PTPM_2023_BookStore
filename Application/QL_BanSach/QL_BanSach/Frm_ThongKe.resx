<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_XuatBaoCao.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>